[
    {
        "class_name": "Test",
        "id": 20,
        "name": "linear_test",
        "accessibility": 2,
        "protected": "1",
        "archived": "0",
        "visibility": 2,
        "type": 1,
        "code": "decoded_template_def = fromJSON(template_def)\n\ngetQuestions = function(){\n  questions = NULL\n  ib = fromJSON(item_bank)\n  if(ib$table_type == \"custom\") {\n    test_id = concerto$mainTest$id\n    table = ib$custom_table\n    question_column = ib$custom_question_column$column\n    response_options_column = ib$custom_response_options_column$column\n    correct_column = ib$custom_correct_column$column\n    trait_column = ib$custom_trait_column$column\n    order_column = ib$custom_order_column$column\n    test_id_column = ib$custom_test_id_column$column\n\n    questions = concerto.table.query(\"SELECT id, `{{question_column}}` AS `question`, `{{response_options_column}}` AS `response_options`, `{{correct_column}}` AS `correct`, `{{trait_column}}` AS `trait` FROM `{{table}}` WHERE `{{test_id_column}}` = {{test_id}} ORDER BY `{{order_column}}` ASC\", list(\n      question_column=question_column,\n      response_options_column=response_options_column,\n      trait_column=trait_column,\n      order_column=order_column,\n      correct_column=correct_column,\n      table=table,\n      test_id_column=test_id_column,\n      test_id=test_id\n    ))\n  }\n  if(ib$table_type == \"direct\") {\n    if(length(ib$direct_table) > 0) {\n      for(i in 1:length(ib$direct_table)) {\n        ib$direct_table[[i]]$response_options = toJSON(ib$direct_table[[i]]$response_options)\n        questions = rbind(questions, data.frame(ib$direct_table[[i]], stringsAsFactors=F))\n      }\n    }\n  }\n\n  if(dim(questions)[1] > 0 && order == \"random\") {\n    questions = questions[sample(1:dim(questions)[1]),]\n  }\n\n  return(questions)\n}\n\ngetContent = function(question, current_item, answers) {\n  content = paragraph\n\n  content = paste0(content, \"<div class='formField'>\")\n  content = paste0(content, question$question)\n  content = paste0(content, getResponseOptions(question, current_item, answers))\n  content = paste0(content, \"<\/div>\")\n\n  return(content)\n}\n\ngetResponseOptions = function(question, current_item, answers) {\n  content = \"\"\n  options = NULL\n  o = question$response_options\n  if(is.character(o)) { o = fromJSON(o) }\n\n  if(length(o) > 0) {\n    #response options\n    for(i in 1:length(o)) {\n      options = rbind(options, as.list(o[[i]]))\n    }\n\n    if(randomized_response_options == \"1\") {\n      if(dim(options)[1] > 0) {\n        options = options[sample(1:dim(options)[1]),]\n      }\n    }\n\n    content = \"<div class='catResponseGroup'>\"\n    section_class = \"catResponseSectionVertical\"\n    section_styles = \"\"\n    if(responses_layout == \"horizontal\") { \n      section_class = \"catResponseSectionHorizontal\" \n      section_styles = paste0(\"width: \",response_width)\n    }\n\n    for(i in 1:dim(options)[1]) {\n      option = options[i,]\n      checked = \"\"\n      if(!is.null(answers[current_item]) && !is.na(answers[current_item]) && answers[current_item] == option$value) { checked = \"checked\" }\n      content = paste0(content, \"<div class='\",section_class,\"' style='\",section_styles,\"'><label for='input_response_\",i,\"'><table class='catResponseTable'><tr>\")\n      content = paste0(content, \"<td class='catResponseButtonCell'><input type='radio' id='input_response_\",i,\"' name='response' value='\",option$value,\"' \",checked,\" \/><\/td>\")\n      content = paste0(content, \"<td class='catResponseLabelCell'>\",option$label,\"<\/td>\")\n      content = paste0(content, \"<\/tr><\/table><\/label><\/div>\")\n    }\n    content = paste0(content, \"<div style='clear:both;'><\/div>\")\n    content = paste0(content, \"<\/div>\")\n  } else {\n    #open question\n    value = \"\"\n    if(!is.null(answers[current_item]) && !is.na(answers[current_item])) { value = answers[current_item] }\n    content = paste0(\"<div><input type='text' name='response' style='width:100%;' value='\",value,\"' \/><\/div>\")\n  }\n  return(content)\n}\n\nshouldStop = function(response, answers, questions, current_item, next_item) {\n  sr_time = fromJSON(stopping_time)\n  if(!is.null(sr_time$type) && sr_time$type == \"test\" && response$isTimeout == \"1\") { return(TRUE) }\n\n  sr_count = fromJSON(stopping_item_count)\n\n  if((sr_count$enabled == \"1\" && current_item >= as.numeric(sr_count$count)) || next_item > dim(questions)[1]) { return(TRUE) }\n  return(FALSE)\n}\n\nsaveResponse = function(response, question, rb, correct, scores, correctness, current_item) {\n  if(is.null(response$response)) { return(scores) }\n\n  table = \"default_linear_response_table\"\n  item_id_column = \"item_id\"\n  response_column = \"response\"\n  time_taken_column = \"time_taken\"\n  session_id_column = \"session_id\"\n  correct_column = \"correct\"\n  trait_column = \"trait\"\n  if(rb$table_type == \"custom\") {\n    table = rb$custom_table\n    item_id_column = rb$custom_item_id_column$column\n    response_column = rb$custom_response_column$column\n    time_taken_column = rb$custom_time_taken_column$column\n    session_id_column = rb$custom_session_id_column$column\n    correct_column = rb$custom_correct_column$column\n    trait_column = rb$custom_trait_column$column\n  }\n  session_id = 0\n  if(is.list(session)) { \n    session_id = session$id\n  }\n\n  r = concerto.table.query(\"SELECT `id` FROM `{{table}}` WHERE `{{item_id_column}}`={{item_id}} AND `{{session_id_column}}`={{session_id}}\", list(\n    table=table,\n    session_id_column=session_id_column,\n    session_id=session_id,\n    item_id_column=item_id_column,\n    item_id=question$id\n  ))\n  if(dim(r)[1] > 0) { \n    rid = r[1,\"id\"]\n    concerto.table.query(\"UPDATE `{{table}}` SET `{{response_column}}`='{{response}}', `{{time_taken_column}}`={{time_taken}}, `{{correct_column}}`={{correct}} WHERE `id`={{id}}\", list(\n      table=table,\n      session_id_column=session_id_column,\n      session_id=session_id,\n      item_id_column=item_id_column,\n      item_id=question$id,\n      response_column=response_column,\n      response=response$response,\n      time_taken_column=time_taken_column,\n      time_taken=response$timeTaken,\n      correct_column=correct_column,\n      correct=correct,\n      trait_column=trait_column,\n      trait=question$trait,\n      id=rid\n    ))\n  } else {\n    concerto.table.query(\"INSERT INTO `{{table}}` SET `{{item_id_column}}`={{item_id}}, `{{response_column}}`='{{response}}', `{{time_taken_column}}`={{time_taken}}, `{{session_id_column}}`={{session_id}}, `{{correct_column}}`={{correct}}, `{{trait_column}}`='{{trait}}'\", list(\n      table=table,\n      session_id_column=session_id_column,\n      session_id=session_id,\n      item_id_column=item_id_column,\n      item_id=question$id,\n      response_column=response_column,\n      response=response$response,\n      time_taken_column=time_taken_column,\n      time_taken=response$timeTaken,\n      correct_column=correct_column,\n      correct=correct,\n      trait_column=trait_column,\n      trait=question$trait\n    ))\n  }\n\n  if(is.null(scores[[question$trait]])) {\n    scores[[question$trait]] = 0\n  }\n\n  if(!is.null(correctness[current_item]) && !is.na(correctness[current_item])) { \n    prev_correct = correctness[current_item] \n    scores[[question$trait]] = scores[[question$trait]] - prev_correct\n  }\n\n  scores[[question$trait]] = scores[[question$trait]] + correct\n  return(scores)\n}\n\ngetTemplateParams = function(template_params){\n  params = list()\n  if(!is.null(inserts) && is.list(inserts)) {\n    params = inserts\n  }\n  for(key in ls(template_params)) {\n    params[[key]] = template_params[[key]]\n  }\n  return(params)\n}\n\ngetNextDebugItem = function(response, questions) {\n  for(i in 1:dim(questions)[1]) {\n    question = questions[i,]\n    if(question$id == response$item_debug) {\n      return(i)\n    }\n  }\n  return(NULL)\n}\n\ngetDebugContent = function(content, question) {\n  debug = \"<div class='debug'>\"\n  debug = paste0(debug, \"<p>Current item id: #\",question$id,\"<\/p>\") \n  debug = paste0(debug, \"<p>Next item id: <input type='text' name='item_debug' \/><\/p>\")\n  debug = paste0(debug, \"<\/div>\")\n  content = paste0(debug, content)\n  return(content)\n}\n\nquestions = getQuestions()\nrb = fromJSON(response_bank)\nanswers = NULL\nresponse = NULL\nwarning_msg = NULL\ntimer_set = FALSE\ntime_limit = 0\nsr_time = fromJSON(stopping_time)\nif(!is.null(sr_time$type) && (sr_time$type == \"test\" || sr_time$type == \"item\")) { \n  time_limit = as.numeric(sr_time$time_limit) \n}\nif(time_limit > 0) { timer_set = TRUE }\nscores = list()\ncorrectness = NULL\nmax_items = dim(questions)[1]\nsr_item_count = fromJSON(stopping_item_count)\nif(sr_item_count$enabled == \"1\") { max_items = min(max_items, as.numeric(sr_item_count$count)) }\n\ncurrent_item = 1\nwhile(T) {\n  buttons = \"<div class='button_panel button_panel_linear'>\"\n  if(current_item > 1 && can_go_back == \"1\" && item_debug == \"0\") {\n    buttons = paste0(buttons, \"<button name='previous' class='linear_test_button'>\",previous_button_label,\"<\/button>\")\n  }\n  if(dim(questions)[1] > 1 && item_debug == \"0\") {\n    buttons = paste0(buttons, current_item,\"\/\",max_items)\n  }\n  if(current_item <= dim(questions)[1] || item_debug == \"1\") {\n    buttons = paste0(buttons, \"<button name='next' class='linear_test_button'>\",next_button_label,\"<\/button>\")\n  }\n  buttons = paste0(buttons,'<\/div>')\n\n  question = questions[current_item,]\n  content = getContent(question, current_item, answers)\n\n  if(item_debug == \"0\") {\n    response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n      header=decoded_template_def$header, \n      title=title,\n      content=content, \n      warning_msg=warning_msg, \n      buttons=buttons,\n      footer=decoded_template_def$footer\n    )), timeLimit=time_limit)\n    warning_msg = NULL\n\n    if(timer_set) {\n      time_limit = time_limit - as.numeric(response$timeTaken)\n    }\n\n    if(!is.null(response$response) || response$isTimeout == \"1\") {\n      correct = 0\n      if(is.null(response$response)) { response$response = \"\" }\n      if(response$response == question$correct) { correct = 1 }\n      scores = saveResponse(response, question, rb, correct, scores, correctness, current_item)\n      if(length(answers) < current_item) {\n        answers = c(answers, response$response)\n        correctness = c(correctness, correct)\n      } else {\n        answers[current_item] = response$response\n        correctness[current_item] = correct\n      }\n    }\n\n    prev_item = current_item\n    if(response$buttonPressed == \"next\" || response$isTimeout == \"1\") {\n      if(response_required == \"0\" || (!is.null(response$response) && response$response != \"\") || response$isTimeout == \"1\") {\n        current_item = current_item + 1\n        if(timer_set && sr_time$type == \"item\"){\n          time_limit = as.numeric(sr_time$time_limit) \n        }\n      } else {\n        warning_msg = no_response_alert\n      }\n    }\n    if(response$buttonPressed == \"previous\") {\n      current_item = current_item - 1\n      if(timer_set && sr_time$type == \"item\"){\n        time_limit = as.numeric(sr_time$time_limit) \n      }\n    }\n\n    if(shouldStop(response, answers, questions, prev_item, current_item)) {\n      if(response$isTimeout == \"1\") {\n        .branch = \"out_of_time\"\n      }\n      break\n    }\n  } else {\n    content = getDebugContent(content, question)\n    response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n      header=decoded_template_def$header, \n      title=title,\n      content=content, \n      warning_msg=warning_msg, \n      buttons=buttons,\n      footer=decoded_template_def$footer\n    )))\n    current_item = getNextDebugItem(response, questions)\n    if(is.null(current_item)) {\n      warning_msg = paste0(\"Item id \",response$item_debug,\" not found!\")\n      current_item = 1\n    }\n  }\n}\nrm(questions)",
        "resumable": "0",
        "outdated": "0",
        "description": "",
        "variables": [
            {
                "class_name": "TestVariable",
                "id": 260,
                "name": "answered",
                "type": 2,
                "description": "",
                "passableThroughUrl": "0",
                "value": "0",
                "test": 20,
                "parentVariable": 235
            },
            {
                "class_name": "TestVariable",
                "id": 261,
                "name": "paragraph",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "<p>Please answer question below:<\/p>\n",
                "test": 20,
                "parentVariable": 236
            },
            {
                "class_name": "TestVariable",
                "id": 262,
                "name": "next_button_label",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "next",
                "test": 20,
                "parentVariable": 237
            },
            {
                "class_name": "TestVariable",
                "id": 263,
                "name": "previous_button_label",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "previous",
                "test": 20,
                "parentVariable": 238
            },
            {
                "class_name": "TestVariable",
                "id": 264,
                "name": "item_bank",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "{\"table_type\":\"direct\",\"direct_table\":[],\"custom_table\":\"\",\"custom_question_column\":{},\"custom_order_column\":{},\"custom_response_options\":{},\"custom_correct_column\":{},\"custom_trait_column\":{},\"custom_test_id_column\":{}}",
                "test": 20,
                "parentVariable": 239
            },
            {
                "class_name": "TestVariable",
                "id": 265,
                "name": "response_bank",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "{\"table_type\":\"default\",\"custom_table\":\"\",\"custom_item_id_column\":{},\"custom_response_column\":{},\"custom_trait_column\":{},\"custom_correct_column\":{},\"custom_session_id_column\":{},\"custom_time_taken_column\":{}}",
                "test": 20,
                "parentVariable": 240
            },
            {
                "class_name": "TestVariable",
                "id": 266,
                "name": "stopping_time",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "{\"enabled\":\"0\",\"time_limit\":\"\",\"type\":null}",
                "test": 20,
                "parentVariable": 241
            },
            {
                "class_name": "TestVariable",
                "id": 267,
                "name": "stopping_item_count",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "{\"enabled\":\"0\",\"count\":\"\"}",
                "test": 20,
                "parentVariable": 242
            },
            {
                "class_name": "TestVariable",
                "id": 268,
                "name": "randomized_response_options",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "1",
                "test": 20,
                "parentVariable": 243
            },
            {
                "class_name": "TestVariable",
                "id": 269,
                "name": "order",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "random",
                "test": 20,
                "parentVariable": 244
            },
            {
                "class_name": "TestVariable",
                "id": 270,
                "name": "session",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 245
            },
            {
                "class_name": "TestVariable",
                "id": 271,
                "name": "inserts",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 246
            },
            {
                "class_name": "TestVariable",
                "id": 272,
                "name": "response_required",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "0",
                "test": 20,
                "parentVariable": 247
            },
            {
                "class_name": "TestVariable",
                "id": 273,
                "name": "no_response_alert",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 248
            },
            {
                "class_name": "TestVariable",
                "id": 274,
                "name": "scores",
                "type": 1,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 249
            },
            {
                "class_name": "TestVariable",
                "id": 275,
                "name": "can_go_back",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "1",
                "test": 20,
                "parentVariable": 250
            },
            {
                "class_name": "TestVariable",
                "id": 276,
                "name": "item_debug",
                "type": 0,
                "description": "<p><span style=\"line-height: 20.8px;\">1 to turn item debug mode on. 0 to turn it off. Item debug mode let&#39;s you specify which item you want to&nbsp;view from your item bank.<\/span><\/p>\n",
                "passableThroughUrl": "0",
                "value": "0",
                "test": 20,
                "parentVariable": 251
            },
            {
                "class_name": "TestVariable",
                "id": 277,
                "name": "out_of_time",
                "type": 2,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 252
            },
            {
                "class_name": "TestVariable",
                "id": 278,
                "name": "title",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "DEMO TEST",
                "test": 20,
                "parentVariable": 253
            },
            {
                "class_name": "TestVariable",
                "id": 279,
                "name": "template_def",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "{\"layout\":\"default_layout\", \"header\":\"<p>Welcome.<\/p>\",\"footer\":\"\"}",
                "test": 20,
                "parentVariable": 254
            },
            {
                "class_name": "TestVariable",
                "id": 280,
                "name": "template_def",
                "type": 1,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 255
            },
            {
                "class_name": "TestVariable",
                "id": 281,
                "name": "session",
                "type": 1,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 256
            },
            {
                "class_name": "TestVariable",
                "id": 282,
                "name": "responses_layout",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": "vertical",
                "test": 20,
                "parentVariable": 257
            },
            {
                "class_name": "TestVariable",
                "id": 283,
                "name": "response_width",
                "type": 0,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 258
            },
            {
                "class_name": "TestVariable",
                "id": 284,
                "name": ".branch",
                "type": 1,
                "description": "",
                "passableThroughUrl": "0",
                "value": null,
                "test": 20,
                "parentVariable": 259
            }
        ],
        "sourceWizard": 10,
        "sourceWizardObject": {
            "class_name": "TestWizard",
            "id": 10,
            "name": "linear_test",
            "description": "",
            "accessibility": 2,
            "protected": "1",
            "archived": "0",
            "steps": [
                {
                    "class_name": "TestWizardStep",
                    "id": 21,
                    "title": "Presentation",
                    "description": "<p>Linear test presentation<\/p>\n",
                    "orderNum": 0,
                    "colsNum": 0,
                    "wizard": 10,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 66,
                            "label": "Paragraph",
                            "description": "",
                            "hideCondition": "",
                            "type": 2,
                            "passableThroughUrl": "0",
                            "value": "<p>Please answer question below:<\/p>\n",
                            "testVariable": 236,
                            "name": "paragraph",
                            "wizardStep": 21,
                            "stepTitle": "Presentation",
                            "order": 2,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 67,
                            "label": "Title",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "DEMO TEST",
                            "testVariable": 253,
                            "name": "title",
                            "wizardStep": 21,
                            "stepTitle": "Presentation",
                            "order": 1,
                            "wizard": 10,
                            "definition": {
                                "placeholder": 0
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 68,
                            "label": "Responses layout",
                            "description": "",
                            "hideCondition": "",
                            "type": 3,
                            "passableThroughUrl": "0",
                            "value": "vertical",
                            "testVariable": 257,
                            "name": "responses_layout",
                            "wizardStep": 21,
                            "stepTitle": "Presentation",
                            "order": 3,
                            "wizard": 10,
                            "definition": {
                                "placeholder": 0,
                                "options": [
                                    {
                                        "value": "horizontal",
                                        "label": "Horizontal",
                                        "order": 0
                                    },
                                    {
                                        "value": "vertical",
                                        "label": "Vertical",
                                        "order": 1
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 69,
                            "label": "Response width",
                            "description": "<p>Can be any valid CSS width property value. E.g.:&nbsp;<strong>200px<\/strong>,&nbsp;<strong>20%<\/strong>.<\/p>\n",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "",
                            "testVariable": 258,
                            "name": "response_width",
                            "wizardStep": 21,
                            "stepTitle": "Presentation",
                            "order": 4,
                            "wizard": 10,
                            "definition": {
                                "placeholder": 0
                            }
                        }
                    ]
                },
                {
                    "class_name": "TestWizardStep",
                    "id": 22,
                    "title": "Items and navigation",
                    "description": "<p>Item bank definition<\/p>\n",
                    "orderNum": 1,
                    "colsNum": 0,
                    "wizard": 10,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 70,
                            "label": "Order",
                            "description": "",
                            "hideCondition": "",
                            "type": 3,
                            "passableThroughUrl": "0",
                            "value": "random",
                            "testVariable": 244,
                            "name": "order",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 1,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0",
                                "options": [
                                    {
                                        "value": "manual",
                                        "label": "manual"
                                    },
                                    {
                                        "value": "random",
                                        "label": "random"
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 71,
                            "label": "Item bank",
                            "description": "<p>For open question leave item response options list empty.<\/p>\n",
                            "hideCondition": "",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"table_type\":\"direct\",\"direct_table\":[],\"custom_table\":\"\",\"custom_question_column\":{},\"custom_order_column\":{},\"custom_response_options\":{},\"custom_correct_column\":{},\"custom_trait_column\":{},\"custom_test_id_column\":{}}",
                            "testVariable": 239,
                            "name": "item_bank",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 0,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": "3",
                                        "name": "table_type",
                                        "label": "Table type",
                                        "definition": {
                                            "placeholder": "0",
                                            "options": [
                                                {
                                                    "value": "direct",
                                                    "label": "direct"
                                                },
                                                {
                                                    "value": "custom",
                                                    "label": "custom"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "10",
                                        "name": "direct_table",
                                        "label": "Table",
                                        "definition": {
                                            "placeholder": "0",
                                            "element": {
                                                "type": 9,
                                                "definition": {
                                                    "placeholder": "0",
                                                    "fields": [
                                                        {
                                                            "type": "0",
                                                            "name": "id",
                                                            "label": "Id",
                                                            "definition": [

                                                            ]
                                                        },
                                                        {
                                                            "type": "2",
                                                            "name": "question",
                                                            "label": "Question",
                                                            "definition": {
                                                                "placeholder": "0"
                                                            }
                                                        },
                                                        {
                                                            "type": "0",
                                                            "name": "order",
                                                            "label": "Order",
                                                            "definition": {
                                                                "placeholder": 0
                                                            }
                                                        },
                                                        {
                                                            "type": "10",
                                                            "name": "response_options",
                                                            "label": "Response options",
                                                            "definition": {
                                                                "placeholder": 0,
                                                                "element": {
                                                                    "type": 9,
                                                                    "definition": {
                                                                        "placeholder": 0,
                                                                        "fields": [
                                                                            {
                                                                                "type": 0,
                                                                                "name": "value",
                                                                                "label": "Value",
                                                                                "definition": {
                                                                                    "placeholder": 0
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": 0,
                                                                                "name": "label",
                                                                                "label": "Label",
                                                                                "definition": {
                                                                                    "placeholder": 0
                                                                                }
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "0",
                                                            "name": "correct",
                                                            "label": "Correct answer",
                                                            "definition": [

                                                            ]
                                                        },
                                                        {
                                                            "type": "0",
                                                            "name": "trait",
                                                            "label": "Trait",
                                                            "definition": [

                                                            ]
                                                        }
                                                    ]
                                                }
                                            }
                                        },
                                        "hideCondition": "parent.table_type != \"direct\""
                                    },
                                    {
                                        "type": "6",
                                        "name": "custom_table",
                                        "label": "Custom table",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_question_column",
                                        "label": "Custom question column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_order_column",
                                        "label": "Custom order column",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_response_options",
                                        "label": "Custom response options column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_correct_column",
                                        "label": "Custom correct answer column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_trait_column",
                                        "label": "Custom trait column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_test_id_column",
                                        "label": "Custom test id column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 72,
                            "label": "Randomize response options",
                            "description": "",
                            "hideCondition": "",
                            "type": 4,
                            "passableThroughUrl": "0",
                            "value": "1",
                            "testVariable": 243,
                            "name": "randomized_response_options",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 2,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 73,
                            "label": "Can go back?",
                            "description": "",
                            "hideCondition": "",
                            "type": 4,
                            "passableThroughUrl": "0",
                            "value": "1",
                            "testVariable": 250,
                            "name": "can_go_back",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 3,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 74,
                            "label": "Next button label",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "next",
                            "testVariable": 237,
                            "name": "next_button_label",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 4,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 75,
                            "label": "Previous button label",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "previous",
                            "testVariable": 238,
                            "name": "previous_button_label",
                            "wizardStep": 22,
                            "stepTitle": "Items and navigation",
                            "order": 5,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        }
                    ]
                },
                {
                    "class_name": "TestWizardStep",
                    "id": 23,
                    "title": "Stopping rules",
                    "description": "",
                    "orderNum": 2,
                    "colsNum": 0,
                    "wizard": 10,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 76,
                            "label": "Time-based stopping rule",
                            "description": "",
                            "hideCondition": "",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"enabled\":\"0\",\"time_limit\":\"\",\"type\":null}",
                            "testVariable": 241,
                            "name": "stopping_time",
                            "wizardStep": 23,
                            "stepTitle": "Stopping rules",
                            "order": 1,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": 3,
                                        "name": "type",
                                        "label": "Type",
                                        "definition": {
                                            "placeholder": 0,
                                            "options": [
                                                {
                                                    "value": "test",
                                                    "label": "test wide",
                                                    "order": "1"
                                                },
                                                {
                                                    "value": "item",
                                                    "label": "item",
                                                    "order": "0"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": 0,
                                        "name": "time_limit",
                                        "label": "Time limit (seconds)",
                                        "definition": {
                                            "placeholder": 0
                                        },
                                        "hideCondition": "!parent.type"
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 77,
                            "label": "Item count-based stopping rule",
                            "description": "",
                            "hideCondition": "",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"enabled\":\"0\",\"count\":\"\"}",
                            "testVariable": 242,
                            "name": "stopping_item_count",
                            "wizardStep": 23,
                            "stepTitle": "Stopping rules",
                            "order": 0,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": "4",
                                        "name": "enabled",
                                        "label": "Enabled",
                                        "definition": {
                                            "placeholder": "0"
                                        }
                                    },
                                    {
                                        "type": "0",
                                        "name": "count",
                                        "label": "Max item count",
                                        "hideCondition": "parent.enabled != \"1\""
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "class_name": "TestWizardStep",
                    "id": 24,
                    "title": "Response bank",
                    "description": "",
                    "orderNum": 3,
                    "colsNum": 0,
                    "wizard": 10,
                    "params": [
                        {
                            "class_name": "TestWizardParam",
                            "id": 78,
                            "label": "Response bank",
                            "description": "",
                            "hideCondition": "",
                            "type": 9,
                            "passableThroughUrl": "0",
                            "value": "{\"table_type\":\"default\",\"custom_table\":\"\",\"custom_item_id_column\":{},\"custom_response_column\":{},\"custom_trait_column\":{},\"custom_correct_column\":{},\"custom_session_id_column\":{},\"custom_time_taken_column\":{}}",
                            "testVariable": 240,
                            "name": "response_bank",
                            "wizardStep": 24,
                            "stepTitle": "Response bank",
                            "order": 0,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0",
                                "fields": [
                                    {
                                        "type": "3",
                                        "name": "table_type",
                                        "label": "Table type",
                                        "definition": {
                                            "placeholder": "0",
                                            "options": [
                                                {
                                                    "value": "default",
                                                    "label": "default"
                                                },
                                                {
                                                    "value": "custom",
                                                    "label": "custom"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "6",
                                        "name": "custom_table",
                                        "label": "Custom table",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_item_id_column",
                                        "label": "Custom id column",
                                        "hideCondition": "parent.table_type != \"custom\"",
                                        "definition": {
                                            "placeholder": "0"
                                        }
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_response_column",
                                        "label": "Custom response column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_trait_column",
                                        "label": "Custom trait column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_correct_column",
                                        "label": "Custom correct column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_session_id_column",
                                        "label": "Custom session id column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    },
                                    {
                                        "type": "7",
                                        "name": "custom_time_taken_column",
                                        "label": "Custom time taken column",
                                        "definition": {
                                            "placeholder": "0"
                                        },
                                        "hideCondition": "parent.table_type != \"custom\""
                                    }
                                ]
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 79,
                            "label": "Response required",
                            "description": "",
                            "hideCondition": "",
                            "type": 4,
                            "passableThroughUrl": "0",
                            "value": "0",
                            "testVariable": 247,
                            "name": "response_required",
                            "wizardStep": 24,
                            "stepTitle": "Response bank",
                            "order": 1,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        },
                        {
                            "class_name": "TestWizardParam",
                            "id": 80,
                            "label": "No response alert",
                            "description": "",
                            "hideCondition": "",
                            "type": 0,
                            "passableThroughUrl": "0",
                            "value": "",
                            "testVariable": 248,
                            "name": "no_response_alert",
                            "wizardStep": 24,
                            "stepTitle": "Response bank",
                            "order": 2,
                            "wizard": 10,
                            "definition": {
                                "placeholder": "0"
                            }
                        }
                    ]
                }
            ],
            "test": 19,
            "testObject": {
                "class_name": "Test",
                "id": 19,
                "name": "source_linear_test",
                "accessibility": 2,
                "protected": "1",
                "archived": "0",
                "visibility": 2,
                "type": 0,
                "code": "decoded_template_def = fromJSON(template_def)\n\ngetQuestions = function(){\n  questions = NULL\n  ib = fromJSON(item_bank)\n  if(ib$table_type == \"custom\") {\n    test_id = concerto$mainTest$id\n    table = ib$custom_table\n    question_column = ib$custom_question_column$column\n    response_options_column = ib$custom_response_options_column$column\n    correct_column = ib$custom_correct_column$column\n    trait_column = ib$custom_trait_column$column\n    order_column = ib$custom_order_column$column\n    test_id_column = ib$custom_test_id_column$column\n\n    questions = concerto.table.query(\"SELECT id, `{{question_column}}` AS `question`, `{{response_options_column}}` AS `response_options`, `{{correct_column}}` AS `correct`, `{{trait_column}}` AS `trait` FROM `{{table}}` WHERE `{{test_id_column}}` = {{test_id}} ORDER BY `{{order_column}}` ASC\", list(\n      question_column=question_column,\n      response_options_column=response_options_column,\n      trait_column=trait_column,\n      order_column=order_column,\n      correct_column=correct_column,\n      table=table,\n      test_id_column=test_id_column,\n      test_id=test_id\n    ))\n  }\n  if(ib$table_type == \"direct\") {\n    if(length(ib$direct_table) > 0) {\n      for(i in 1:length(ib$direct_table)) {\n        ib$direct_table[[i]]$response_options = toJSON(ib$direct_table[[i]]$response_options)\n        questions = rbind(questions, data.frame(ib$direct_table[[i]], stringsAsFactors=F))\n      }\n    }\n  }\n\n  if(dim(questions)[1] > 0 && order == \"random\") {\n    questions = questions[sample(1:dim(questions)[1]),]\n  }\n\n  return(questions)\n}\n\ngetContent = function(question, current_item, answers) {\n  content = paragraph\n\n  content = paste0(content, \"<div class='formField'>\")\n  content = paste0(content, question$question)\n  content = paste0(content, getResponseOptions(question, current_item, answers))\n  content = paste0(content, \"<\/div>\")\n\n  return(content)\n}\n\ngetResponseOptions = function(question, current_item, answers) {\n  content = \"\"\n  options = NULL\n  o = question$response_options\n  if(is.character(o)) { o = fromJSON(o) }\n\n  if(length(o) > 0) {\n    #response options\n    for(i in 1:length(o)) {\n      options = rbind(options, as.list(o[[i]]))\n    }\n\n    if(randomized_response_options == \"1\") {\n      if(dim(options)[1] > 0) {\n        options = options[sample(1:dim(options)[1]),]\n      }\n    }\n\n    content = \"<div class='catResponseGroup'>\"\n    section_class = \"catResponseSectionVertical\"\n    section_styles = \"\"\n    if(responses_layout == \"horizontal\") { \n      section_class = \"catResponseSectionHorizontal\" \n      section_styles = paste0(\"width: \",response_width)\n    }\n\n    for(i in 1:dim(options)[1]) {\n      option = options[i,]\n      checked = \"\"\n      if(!is.null(answers[current_item]) && !is.na(answers[current_item]) && answers[current_item] == option$value) { checked = \"checked\" }\n      content = paste0(content, \"<div class='\",section_class,\"' style='\",section_styles,\"'><label for='input_response_\",i,\"'><table class='catResponseTable'><tr>\")\n      content = paste0(content, \"<td class='catResponseButtonCell'><input type='radio' id='input_response_\",i,\"' name='response' value='\",option$value,\"' \",checked,\" \/><\/td>\")\n      content = paste0(content, \"<td class='catResponseLabelCell'>\",option$label,\"<\/td>\")\n      content = paste0(content, \"<\/tr><\/table><\/label><\/div>\")\n    }\n    content = paste0(content, \"<div style='clear:both;'><\/div>\")\n    content = paste0(content, \"<\/div>\")\n  } else {\n    #open question\n    value = \"\"\n    if(!is.null(answers[current_item]) && !is.na(answers[current_item])) { value = answers[current_item] }\n    content = paste0(\"<div><input type='text' name='response' style='width:100%;' value='\",value,\"' \/><\/div>\")\n  }\n  return(content)\n}\n\nshouldStop = function(response, answers, questions, current_item, next_item) {\n  sr_time = fromJSON(stopping_time)\n  if(!is.null(sr_time$type) && sr_time$type == \"test\" && response$isTimeout == \"1\") { return(TRUE) }\n\n  sr_count = fromJSON(stopping_item_count)\n\n  if((sr_count$enabled == \"1\" && current_item >= as.numeric(sr_count$count)) || next_item > dim(questions)[1]) { return(TRUE) }\n  return(FALSE)\n}\n\nsaveResponse = function(response, question, rb, correct, scores, correctness, current_item) {\n  if(is.null(response$response)) { return(scores) }\n\n  table = \"default_linear_response_table\"\n  item_id_column = \"item_id\"\n  response_column = \"response\"\n  time_taken_column = \"time_taken\"\n  session_id_column = \"session_id\"\n  correct_column = \"correct\"\n  trait_column = \"trait\"\n  if(rb$table_type == \"custom\") {\n    table = rb$custom_table\n    item_id_column = rb$custom_item_id_column$column\n    response_column = rb$custom_response_column$column\n    time_taken_column = rb$custom_time_taken_column$column\n    session_id_column = rb$custom_session_id_column$column\n    correct_column = rb$custom_correct_column$column\n    trait_column = rb$custom_trait_column$column\n  }\n  session_id = 0\n  if(is.list(session)) { \n    session_id = session$id\n  }\n\n  r = concerto.table.query(\"SELECT `id` FROM `{{table}}` WHERE `{{item_id_column}}`={{item_id}} AND `{{session_id_column}}`={{session_id}}\", list(\n    table=table,\n    session_id_column=session_id_column,\n    session_id=session_id,\n    item_id_column=item_id_column,\n    item_id=question$id\n  ))\n  if(dim(r)[1] > 0) { \n    rid = r[1,\"id\"]\n    concerto.table.query(\"UPDATE `{{table}}` SET `{{response_column}}`='{{response}}', `{{time_taken_column}}`={{time_taken}}, `{{correct_column}}`={{correct}} WHERE `id`={{id}}\", list(\n      table=table,\n      session_id_column=session_id_column,\n      session_id=session_id,\n      item_id_column=item_id_column,\n      item_id=question$id,\n      response_column=response_column,\n      response=response$response,\n      time_taken_column=time_taken_column,\n      time_taken=response$timeTaken,\n      correct_column=correct_column,\n      correct=correct,\n      trait_column=trait_column,\n      trait=question$trait,\n      id=rid\n    ))\n  } else {\n    concerto.table.query(\"INSERT INTO `{{table}}` SET `{{item_id_column}}`={{item_id}}, `{{response_column}}`='{{response}}', `{{time_taken_column}}`={{time_taken}}, `{{session_id_column}}`={{session_id}}, `{{correct_column}}`={{correct}}, `{{trait_column}}`='{{trait}}'\", list(\n      table=table,\n      session_id_column=session_id_column,\n      session_id=session_id,\n      item_id_column=item_id_column,\n      item_id=question$id,\n      response_column=response_column,\n      response=response$response,\n      time_taken_column=time_taken_column,\n      time_taken=response$timeTaken,\n      correct_column=correct_column,\n      correct=correct,\n      trait_column=trait_column,\n      trait=question$trait\n    ))\n  }\n\n  if(is.null(scores[[question$trait]])) {\n    scores[[question$trait]] = 0\n  }\n\n  if(!is.null(correctness[current_item]) && !is.na(correctness[current_item])) { \n    prev_correct = correctness[current_item] \n    scores[[question$trait]] = scores[[question$trait]] - prev_correct\n  }\n\n  scores[[question$trait]] = scores[[question$trait]] + correct\n  return(scores)\n}\n\ngetTemplateParams = function(template_params){\n  params = list()\n  if(!is.null(inserts) && is.list(inserts)) {\n    params = inserts\n  }\n  for(key in ls(template_params)) {\n    params[[key]] = template_params[[key]]\n  }\n  return(params)\n}\n\ngetNextDebugItem = function(response, questions) {\n  for(i in 1:dim(questions)[1]) {\n    question = questions[i,]\n    if(question$id == response$item_debug) {\n      return(i)\n    }\n  }\n  return(NULL)\n}\n\ngetDebugContent = function(content, question) {\n  debug = \"<div class='debug'>\"\n  debug = paste0(debug, \"<p>Current item id: #\",question$id,\"<\/p>\") \n  debug = paste0(debug, \"<p>Next item id: <input type='text' name='item_debug' \/><\/p>\")\n  debug = paste0(debug, \"<\/div>\")\n  content = paste0(debug, content)\n  return(content)\n}\n\nquestions = getQuestions()\nrb = fromJSON(response_bank)\nanswers = NULL\nresponse = NULL\nwarning_msg = NULL\ntimer_set = FALSE\ntime_limit = 0\nsr_time = fromJSON(stopping_time)\nif(!is.null(sr_time$type) && (sr_time$type == \"test\" || sr_time$type == \"item\")) { \n  time_limit = as.numeric(sr_time$time_limit) \n}\nif(time_limit > 0) { timer_set = TRUE }\nscores = list()\ncorrectness = NULL\nmax_items = dim(questions)[1]\nsr_item_count = fromJSON(stopping_item_count)\nif(sr_item_count$enabled == \"1\") { max_items = min(max_items, as.numeric(sr_item_count$count)) }\n\ncurrent_item = 1\nwhile(T) {\n  buttons = \"<div class='button_panel button_panel_linear'>\"\n  if(current_item > 1 && can_go_back == \"1\" && item_debug == \"0\") {\n    buttons = paste0(buttons, \"<button name='previous' class='linear_test_button'>\",previous_button_label,\"<\/button>\")\n  }\n  if(dim(questions)[1] > 1 && item_debug == \"0\") {\n    buttons = paste0(buttons, current_item,\"\/\",max_items)\n  }\n  if(current_item <= dim(questions)[1] || item_debug == \"1\") {\n    buttons = paste0(buttons, \"<button name='next' class='linear_test_button'>\",next_button_label,\"<\/button>\")\n  }\n  buttons = paste0(buttons,'<\/div>')\n\n  question = questions[current_item,]\n  content = getContent(question, current_item, answers)\n\n  if(item_debug == \"0\") {\n    response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n      header=decoded_template_def$header, \n      title=title,\n      content=content, \n      warning_msg=warning_msg, \n      buttons=buttons,\n      footer=decoded_template_def$footer\n    )), timeLimit=time_limit)\n    warning_msg = NULL\n\n    if(timer_set) {\n      time_limit = time_limit - as.numeric(response$timeTaken)\n    }\n\n    if(!is.null(response$response) || response$isTimeout == \"1\") {\n      correct = 0\n      if(is.null(response$response)) { response$response = \"\" }\n      if(response$response == question$correct) { correct = 1 }\n      scores = saveResponse(response, question, rb, correct, scores, correctness, current_item)\n      if(length(answers) < current_item) {\n        answers = c(answers, response$response)\n        correctness = c(correctness, correct)\n      } else {\n        answers[current_item] = response$response\n        correctness[current_item] = correct\n      }\n    }\n\n    prev_item = current_item\n    if(response$buttonPressed == \"next\" || response$isTimeout == \"1\") {\n      if(response_required == \"0\" || (!is.null(response$response) && response$response != \"\") || response$isTimeout == \"1\") {\n        current_item = current_item + 1\n        if(timer_set && sr_time$type == \"item\"){\n          time_limit = as.numeric(sr_time$time_limit) \n        }\n      } else {\n        warning_msg = no_response_alert\n      }\n    }\n    if(response$buttonPressed == \"previous\") {\n      current_item = current_item - 1\n      if(timer_set && sr_time$type == \"item\"){\n        time_limit = as.numeric(sr_time$time_limit) \n      }\n    }\n\n    if(shouldStop(response, answers, questions, prev_item, current_item)) {\n      if(response$isTimeout == \"1\") {\n        .branch = \"out_of_time\"\n      }\n      break\n    }\n  } else {\n    content = getDebugContent(content, question)\n    response = concerto.template.show(decoded_template_def$layout, params=getTemplateParams(list(\n      header=decoded_template_def$header, \n      title=title,\n      content=content, \n      warning_msg=warning_msg, \n      buttons=buttons,\n      footer=decoded_template_def$footer\n    )))\n    current_item = getNextDebugItem(response, questions)\n    if(is.null(current_item)) {\n      warning_msg = paste0(\"Item id \",response$item_debug,\" not found!\")\n      current_item = 1\n    }\n  }\n}\nrm(questions)",
                "slug": "715033e1faecbd9e735ab978826808e0",
                "resumable": "0",
                "outdated": "0",
                "description": "",
                "variables": [
                    {
                        "class_name": "TestVariable",
                        "id": 235,
                        "name": "answered",
                        "type": 2,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": "0",
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 236,
                        "name": "paragraph",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 237,
                        "name": "next_button_label",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 238,
                        "name": "previous_button_label",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 239,
                        "name": "item_bank",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 240,
                        "name": "response_bank",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 241,
                        "name": "stopping_time",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 242,
                        "name": "stopping_item_count",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 243,
                        "name": "randomized_response_options",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 244,
                        "name": "order",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 245,
                        "name": "session",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 246,
                        "name": "inserts",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 247,
                        "name": "response_required",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 248,
                        "name": "no_response_alert",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 249,
                        "name": "scores",
                        "type": 1,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 250,
                        "name": "can_go_back",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 251,
                        "name": "item_debug",
                        "type": 0,
                        "description": "<p><span style=\"line-height: 20.8px;\">1 to turn item debug mode on. 0 to turn it off. Item debug mode let&#39;s you specify which item you want to&nbsp;view from your item bank.<\/span><\/p>\n",
                        "passableThroughUrl": "0",
                        "value": "0",
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 252,
                        "name": "out_of_time",
                        "type": 2,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 253,
                        "name": "title",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 254,
                        "name": "template_def",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": "{\"layout\":\"default_layout\", \"header\":\"<p>Welcome.<\/p>\",\"footer\":\"\"}",
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 255,
                        "name": "template_def",
                        "type": 1,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 256,
                        "name": "session",
                        "type": 1,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 257,
                        "name": "responses_layout",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 258,
                        "name": "response_width",
                        "type": 0,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    },
                    {
                        "class_name": "TestVariable",
                        "id": 259,
                        "name": ".branch",
                        "type": 1,
                        "description": "",
                        "passableThroughUrl": "0",
                        "value": null,
                        "test": 19,
                        "parentVariable": null
                    }
                ],
                "logs": [

                ],
                "sourceWizard": null,
                "sourceWizardObject": null,
                "updatedOn": "2016-06-02 18:25:26",
                "updatedByName": "",
                "nodes": [

                ],
                "nodesConnections": [

                ],
                "tags": "",
                "owner": 1,
                "groups": "",
                "starterContent": false
            },
            "testName": "source_linear_test",
            "updatedOn": "2016-06-02 18:25:28",
            "updatedByName": "",
            "owner": 1,
            "groups": "",
            "starterContent": false
        },
        "updatedOn": "2016-06-02 18:25:30",
        "updatedByName": "",
        "nodes": [

        ],
        "nodesConnections": [

        ],
        "tags": "_concerto_core",
        "owner": 1,
        "groups": "",
        "starterContent": true
    }
]